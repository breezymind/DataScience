for(i in 1:nrow(iris)){
sum = apply(iris[i,-5], 1, FUN = sum)
cat("합계",i,sum,"\n")
}
for(i in 1:nrow(iris)){
sum = 0
for(j in 1:ncol(iris)){
if(is.numeric(iris[i,j]) == T){
sum = sum + iris[i,j]
}
}
cat("합계",i,sum,"\n")
}
dummy <- read.csv("2016-Q1-Trips-History-Data.csv",
stringsAsFactor=F, nrows=1000)
dim(dummy)
str(dummy)
head(dummy)
View(dummy)
stringsAsFactor=F)
Q1_16 <- read.csv("2016-Q1-Trips-History-Data.csv",
stringsAsFactor=F)
summary(Q1_16)
Q1_16 <- read.csv("2016-Q1-Trips-History-Data.csv", stringsAsFactor=F)
head(Q1_16);tail(Q1_16)
sort(Q1_16$rideTime)
sort(Q1_16$rideTime, decreasing = T)
sort(Q1_16$rideTime, rm.na=T)
sort(Q1_16$rideTime, rm.na=T)
sort(Q1_16$rideTime, rm.na="T")
sort(Q1_16$rideTime, rm.na=TRUE)
sort(Q1_16$rideTime)
head(Q1_16);tail(Q1_16)
age <- c(25, 60, 45, 19, 48, 27)
sort(age)
sort(age, decreasing = T)
rank(age)
order(age)
order(age, decreasing = T)
as.numeric(Q1_16$dateEnd[1])
order(age, decreasing = T)
?order
which.max(iris$Sepal.Length)
tapply(iris$Sepal.Length,iris$Species,mean)
which(iris,iris$Sepal.Length>6)
which(iris$Sepal.Length>6)
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
authors
merge(x = authors,y = books,by = c("names"))
?merge
merge(x = authors,y = books,by.x = "surname",by.y="names")
merge(authors, books, by.x = "surname", by.y = "name", all = TRUE)
?merge
books
authors
merge(x = authors,y = books,by.x = "surname",by.y="name")
ncol(iris)
1:ncol(iris)
for(i in 1:ncol(iris)){
print(i)
}
rep(1:10,by=2)
seq(1,10,2)
for(i in seq(1,10,2)){
print(i)
}
seq(1,10)
for(i in seq(1,10)){
print(i)
}
seq(1,10,2)
for(i in seq(1,10,2)){
print(i)
}
iris[1:150,1:4]
?for
a <- c(1,2,3,4,5)
a
a <- c(1,2,3,4,5)
a
a[1]
a[-1]
for(i in 1:nrow(iris)){
sum = 0;
sum = sum(iris[i,-5])
cat("합계",i,sum,"\n")
}
for(i in 1:5){
for(j in 1:2){
cat(i," ",j,"\n")
}
}
for(i in 1:10){
for(j in 1:5){
cat(i," ",j,"\n")
}
}
for(i in 1:3){
for(j in 1:5){
cat(i," ",j,"\n")
}
}
for(i in 1:3){
for(j in 1:5){
sum = sum + j
}
print(sum)
}
for(i in 1:3){
sum = 0
for(j in 1:5){
sum = sum + j
}
print(sum)
}
for(i in 1:3){
#sum = 0
for(j in 1:5){
print(sum)
sum = sum + j
}
#  print(sum)
}
for(i in 1:3){
#sum = 0
for(j in 1:5){
print(sum)
sum = sum + j
}
#  print(sum)
}
sum = 0
for(i in 1:3){
for(j in 1:5){
sum = sum + j
}
}
sum = 0
for(i in 1:3){
for(j in 1:5){
sum = sum + j
}
print(sum)
}
for(i in 1:3){
sum = 0
for(j in 1:5){
sum = sum + j
}
print(sum)
}
for(j in 1:4){
print(iris[i,j])
sum = sum + iris[i,j]
}
for(i in 1:9){
for(j in 1:9){
cat(i,"*",j,"=",i*j)
}
}
for(i in 1:9){
for(j in 1:9){
cat(i,"*",j,"=",i*j,"\n")
}
}
rm(list=ls())
stringsAsFactor=F, nrows=1000)
dummy <- read.csv("2016-Q1-Trips-History-Data.csv",
stringsAsFactor=F, nrows=1000)
dim(dummy)
str(dummy)
head(dummy)
Q1_16 <- read.csv("2016-Q1-Trips-History-Data.csv", stringsAsFactor=F)
head(Q1_16);tail(Q1_16)
sort(Q1_16$rideTime)
summary(Q1_16)
object.size(Q1_16)
aggregate(Q1_16)
aggregate(Q1_16, fun=mean)
aggregate(Q1_16, FUN=mean)
?aggregate
object.size(Q1_16)/1024^2
Q1_16 <- read.csv("2016-Q1-Trips-History-Data.csv", stringsAsFactor=T)
object.size(Q1_16)/1024^2
Q1_16 <- read.csv("2016-Q1-Trips-History-Data.csv", stringsAsFactor=F)
sort(Q1_16$rideTime)
head(Q1_16[,1:5]);tail(Q1_16[,1:5])
Q1_16[300000,]
sort(Q1_16$rideTime,na.rm = T)
sort(Q1_16$rideTime)
which.max(Q1_16[,1])
head(Q1_16);tail(Q1_16)
str(Q1_16)
which.max(Q1_16[,1])
Q1_16[which.max(Q1_16[,1]),]
Q1_16[which.max(Q1_16[,"bike.name"]),]
Q1_16[which.max(Q1_16[,"Bike.number"]),]
Q1_16$dummy <- 1
head(Q1_16);tail(Q1_16)
head(Q1_16[,8])
tapply(Q1_16$dummy, Q1_16$Bike.number, sum)
which(Q1_16[,8]=="W21934")
length(which(Q1_16[,8]=="W21934"))
bikecount <- tapply(Q1_16$dummy, Q1_16$Bike.number, sum)
bikecount
bikecount["W21934"]
hist(bikecount)
?tapply
bikecount
bikecount["W21934"]
hist(bikecount)
length(which(Q1_16$Bike.number=="W21934"))
which(Q1_16$Bike.number=="W21934")
length(which(Q1_16$Bike.number=="W21934"))
a <- c(1,2,3,4)
length(a)
bikecount <- tapply(Q1_16$dummy, Q1_16$Bike.number, sum)
bikecount["W21934"]
?tapply
?sapply(Q1_16, sum)
sapply(Q1_16$Bike.number, sum)
sapply(Q1_16$dummy, sum)
?sapply
biketime <- tapply(Q1_16[,1]/1000/60,Q1_16$Bike.number, mean)
biketime
head(biketime)
head(Q1_16);tail(Q1_16)
biketime <- tapply(Q1_16[,1]/1000/60,Q1_16$Bike.number, mean)
head(biketime)
membershipbiketime <- tapply(Q1_16[,1]/1000/60,Q1_16$Member.Type, mean)
head(membershipbiketime)
aggregate(Q1_16$Duration..ms. ~ Q1_16$Member.Type, FUN = mean)
str(aggregate(Q1_16$Duration..ms. ~ Q1_16$Member.Type, FUN = mean))
biketime
length(biketime)
Q1_16$rideTime = Q1_16[,1]/1000/60
head(Q1_16)
sort(Q1_16$rideTime)
sort(Q1_16$rideTime, decreasing = T)
sapply(iris[,-5],sum)
sapply(iris[,-5],mean)  # 열을 기준으로 값더하기
lapply(iris[,-5],mean)
save(membershipbiketime, file="membershipbiketime.RData")
save(Q1_16,file="Q1_16_2016_washington_bike.RData")
rm(Q1_16)
load("Q1_16_2016_washington_bike.RData",stringasFactor = F)
load("Q1_16_2016_washington_bike.RData")
View(Q1_16)
Q1_16[Q1_16$Member.Type=="Registered",]
a <-Q1_16[Q1_16$Member.Type=="Registered",]
write.csv(a,file="member_registered")
write.csv(a,file="member_registered",row.names = F)
b <- Q1_16[,Q1_16$Member.Type=="Registered"]
order(age)
age <- c(25, 60, 45, 19, 48, 27)
sort(age)
sort(age, decreasing = T)
rank(age)
order(age)
order(age)  # 가장 작은 거부터
c(order(age))
age[order(age)]
