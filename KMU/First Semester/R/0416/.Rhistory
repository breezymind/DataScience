View(mtrushBMP)
mtrushBMP <- readJPEG("mount-rushmore-national-memorial.jpg")
str(mtrushBMP)
class(mtrushBMP)
dim(mtrushBMP)
range(mtrushBMP[1, ,1])
max(mtrushBMP)
min(mtrushBMP)
install.packages("jpeg")
library(jpeg)
mtrushBMP <- readJPEG("mount-rushmore-national-memorial.jpg")
str(mtrushBMP)
class(mtrushBMP)
dim(mtrushBMP)
range(mtrushBMP[1, ,1])
max(mtrushBMP)
min(mtrushBMP)
View(mtrushBMP)
mtrushBMP[100:200,100:200,1] <- 1  # Red
mtrushBMP[100:200,100:200,2] <- 1  # Green
mtrushBMP[100:200,100:200,3] <- 1  # Blue
writeJPEG(mtrushBMP, target="mtrushJPG.jpg")
library(jpeg)
mtrushBMP <- readJPEG("mount-rushmore-national-memorial.jpg")
str(mtrushBMP)
class(mtrushBMP)
dim(mtrushBMP)
range(mtrushBMP[1, ,1])
max(mtrushBMP)
min(mtrushBMP)
mtrushBMP[100:200,100:200,1] <- 1  # Red
mtrushBMP[100:200,100:200,2] <- 1  # Green
mtrushBMP[100:200,100:200,3] <- 1  # Blue
# you can save touched image file by way of target keyword of writeJPEG function
writeJPEG(mtrushBMP, target="mtrushJPG.jpg")
for (i in 1:dim(mtrushBMP)[1]) {
if ( i %% 50 == 0) {
mtrushBMP[i,,1] <- 1
mtrushBMP[i,,2] <- 1
mtrushBMP[i,,3] <- 1
}
}
writeJPEG(mtrushBMP,target="mtrushJPG2.jpg")
mtrushBMP[100:200,100:200,4] <- 1  # Red
mtrushBMP[100:200,100:200,5] <- 1  # Green
mtrushBMP[100:200,100:200,6] <- 1  # Blue
mtrushBMP[100:200,100:200,1] <- 2  # Red   # RGB라는게 3차원 숫자형태로 그림을 표시하는데 1이 R영역, 2가 G영역, 3이 B영역
mtrushBMP[100:200,100:200,2] <- 2  # Green
mtrushBMP[100:200,100:200,3] <- 2  # Blue
writeJPEG(mtrushBMP, target="mtrushJPG.jpg")
mtrushBMP[100:200,100:200,1] <- 10  # Red   # RGB라는게 3차원 숫자형태로 그림을 표시하는데 1이 R영역, 2가 G영역, 3이 B영역
mtrushBMP[100:200,100:200,2] <- 10  # Green
mtrushBMP[100:200,100:200,3] <- 10  # Blue
writeJPEG(mtrushBMP, target="mtrushJPG.jpg")
writeJPEG(mtrushBMP, target="a.jpg")
mtrushBMP[100:200,100:200,1] <- 200  # Red   # RGB라는게 3차원 숫자형태로 그림을 표시하는데 1이 R영역, 2가 G영역, 3이 B영역
mtrushBMP[100:200,100:200,2] <- 200  # Green
mtrushBMP[100:200,100:200,3] <- 200  # Blue
writeJPEG(mtrushBMP, target="a.jpg")
mtrushBMP[100:200,100:200,1] <- 200  # Red   # RGB라는게 3차원 숫자형태로 그림을 표시하는데 1이 R영역, 2가 G영역, 3이 B영역
mtrushBMP[100:200,100:200,2] <- 150  # Green
mtrushBMP[100:200,100:200,3] <- 10  # Blue
writeJPEG(mtrushBMP, target="a.jpg")
mtrushBMP <- readJPEG("mount-rushmore-national-memorial.jpg")
mtrushBMP
head(mtrushBMP)
mtrushBMP[100:200,100:200,1] <- 250  # Red   # RGB라는게 3차원 숫자형태로 그림을 표시하는데 1이 R영역, 2가 G영역, 3이 B영역
mtrushBMP[100:200,100:200,2] <- 250  # Green
mtrushBMP[100:200,100:200,3] <- 50  # Blue
writeJPEG(mtrushBMP, target="a.jpg")
mtrushBMP[100:200,100:200,1] <- 250  # Red   # RGB라는게 3차원 숫자형태로 그림을 표시하는데 1이 R영역, 2가 G영역, 3이 B영역
mtrushBMP[100:200,100:200,2] <- 50  # Green
mtrushBMP[100:200,100:200,3] <- 250  # Blue
writeJPEG(mtrushBMP, target="a.jpg")
mtrushBMP[100:200,100:200,1] <- 50  # Red   # RGB라는게 3차원 숫자형태로 그림을 표시하는데 1이 R영역, 2가 G영역, 3이 B영역
mtrushBMP[100:200,100:200,2] <- 250  # Green
mtrushBMP[100:200,100:200,3] <- 250  # Blue
writeJPEG(mtrushBMP, target="a.jpg")
rowSums(a)
age <- 10:20
payment <-  300:310
a <- cbind(age,payment)
b <- rbind(age,payment)
rowSums(a)
colSums(a)
class(a)
class(age)
install.packages("doBy")
library(doBy)
install.packages("doBy")
library(doBy)
library("doBy")
install.packages("twittR")
install.packages("doBy")
library("doBy")
## summaryBy
head(iris)
mean(iris$Sepal.Width); mean(iris$Sepal.Length)
summaryBy(Sepal.Width + Sepal.Length ~ Species,data=iris,FUN = mean)
iris$Type = NA
iris[1:75,6] = 1
iris[76:nrow(iris),6] = 2
head(iris);tail(iris)
summaryBy(Sepal.Width + Sepal.Length ~ Species | Type,data=iris,FUN = mean)
## orderBy
iris_setosa[order(iris_setosa$Sepal.Length),]
iris_setosa[order(iris_setosa$Sepal.Length,decreasing = T),]
orderBy(~Sepal.Length,data=iris_setosa)
iris_setosa[order(iris_setosa$Sepal.Length,iris_setosa$Sepal.Width),]
orderBy(~ Sepal.Length + Sepal.Width, data=iris_setosa)
## sampleBy
sample(1:10,replace = T)
iris_setosa[sample(nrow(iris_setosa),nrow(iris_setosa)),]
sampleBy(~ Species, frac = 0.1, data=iris_setosa)
##### 데이터 분리 및 병합 #####
iris = iris[,-6]
## split()
# 주어진 조건에 따라 데이터를 분리
result_3 = split(x = iris$Sepal.Length,f = iris$Species)
result_3
str(result_3)
mean(result_3$setosa)
mean(result_3[[1]])
lapply(result_3,mean)
## subset()
# 주어진 조건을 만족하는 데이터를 선택
subset(x = iris, subset = Species == "setosa" & Sepal.Length > 5.0)
subset(x = iris, Species == "setosa" & Sepal.Length > 5.0,
select = c(Sepal.Length,Sepal.Width))
subset() # Tab활용
x = data.frame(name=c("a","b","c"),math=c(1,2,3))
y = data.frame(name=c("c","b","a"),english =c(4,5,6))
z = data.frame(name=c("b","d","a"),statistic =c(7,8,9))
x;y;z
merge(x = x,y = y,by = c("name"))
merge(x = x,y = z,by = c("name"))
merge(x = x,y = z,by = c("name"),all = T)
merge(x = x,y = z,by = c("name"))
aggregate(Sepal.Length ~ Species,data=iris,FUN=mean)           # 알고싶은 값 ~ 기준.
aggregate(Sepal.Length ~ Species,data=iris,FUN=max)
aggregate(Sepal.Length ~ Species,data=iris,FUN=summary)
iris$Type = NA
iris[1:75,6] = 1
iris[76:nrow(iris),6] = 2
aggregate(Sepal.Length ~ Species + Type,data=iris,FUN=summary)
head(iris)
library("doBy")
head(iris)
mean(iris$Sepal.Width); mean(iris$Sepal.Length)
summaryBy(Sepal.Width + Sepal.Length ~ Species,data=iris,FUN = mean)
?summaryBy
iris$Type = NA
iris[1:75,6] = 1
iris[76:nrow(iris),6] = 2
head(iris);tail(iris)
summaryBy(Sepal.Width + Sepal.Length ~ Species | Type,data=iris,FUN = mean)
iris_setosa[order(iris_setosa$Sepal.Length),]
iris_setosa = iris[iris$Species == 'setosa',]
iris_versicolor = iris[iris$Species == 'versicolor',]
iris_virginica = iris[iris$Species == 'virginica',]
iris_setosa[order(iris_setosa$Sepal.Length),]
order(iris_setosa$Sepal.Length)
iiris_setosa[order(iris_setosa$Sepal.Length,decreasing = T),]
iris_setosa[order(iris_setosa$Sepal.Length,decreasing = T),]
orderBy(~Sepal.Length,data=iris_setosa)
iris_setosa[order(iris_setosa$Sepal.Length,iris_setosa$Sepal.Width),]
orderBy(~ Sepal.Length + Sepal.Width, data=iris_setosa)
