install.packages("NbClust")
install.packages("kohonen")
install.packages("ggplot2")
install.packages("gridExtra")
install.packages("scales")
source('D:/DataScience/KMU/Second Semester/DataMining/1203_Clustering/clust.R', encoding = 'UTF-8', echo=TRUE)
library(cluster)
library(NbClust)
library(ggplot2)
library(kohonen)
library(gridExtra)
library(scales)
cdata <- read.delim("Cluster.txt", stringsAsFactors=FALSE)
set.seed(1)
km <- kmeans(subset(cdata, select=-c(ID)), centers=4)
str(km)
km
clusplot(subset(cdata, select=-c(ID)), km$cluster)
head(cdata)
clusplot(subset(cdata, select=-c(ID)), km$cluster)
cdata$cluster <- as.factor(km$cluster)
qplot(MONEY, VISIT, colour=cluster, data=cdata)
plot(subset(cdata, select=-c(ID,cluster)), col=km$cluster)
qplot(MONEY, VISIT, colour=cluster, data=cdata)
p1 <- qplot(MONEY, fill=cluster, alpha=.5, data=cdata, geom="density") + scale_alpha(guide="none")
p2 <- qplot(VISIT, fill=cluster, alpha=.5, data=cdata, geom="density") + theme(legend.position="none")
p3 <- qplot(CROSS, fill=cluster, alpha=.5, data=cdata, geom="density") + theme(legend.position="none")
p4 <- qplot(API, fill=cluster, alpha=.5, data=cdata, geom="density") + theme(legend.position="none")
grid.arrange(p1, p2, p3, p4, ncol=2, nrow=2)
p1 <- ggplot(cdata, aes(MONEY)) + geom_density(fill='deeppink3', adjust=1) + facet_grid(. ~ cluster) + scale_x_continuous(breaks=NULL) + scale_y_continuous("", breaks=NULL)
p2 <- ggplot(cdata, aes(VISIT)) + geom_density(fill='deeppink3', adjust=1) + facet_grid(. ~ cluster) + scale_x_continuous(breaks=NULL) + scale_y_continuous("", breaks=NULL) + theme(strip.text.x=element_blank())
p3 <- ggplot(cdata, aes(CROSS)) + geom_density(fill='deeppink3', adjust=1) + facet_grid(. ~ cluster) + scale_x_continuous(breaks=NULL) + scale_y_continuous("", breaks=NULL) + theme(strip.text.x=element_blank())
p4 <- ggplot(cdata, aes(API)) + geom_density(fill='deeppink3', adjust=1) + facet_grid(. ~ cluster) + scale_x_continuous(breaks=NULL) + scale_y_continuous("", breaks=NULL) + theme(strip.text.x=element_blank())
grid.arrange(p1, p2, p3, p4, ncol=1, nrow=4)
x <- ggplot(cdata, aes(x=factor(1), fill=cluster))
x + geom_bar(width=1) + coord_polar(theta="y")
set.seed(1)
sd <- cdata[sample(1:nrow(cdata),100),-1]
d <- dist(sd, method = "euclidean")
fit <- hclust(d, method="ave")
plot(fit)
rect.hclust(fit, k=4, border = "red")
cdata
cdata[760,]
cdata2 <- cdata[-760,]
sd <- cdata2[sample(1:nrow(cdata),100),-1]
d <- dist(sd, method = "euclidean")
fit <- hclust(d, method="ave")
plot(fit)
rect.hclust(fit, k=4, border = "red")
nc = NbClust(subset(cdata, select=-c(ID,cluster)), min.nc=2, max.nc=15, method='kmeans')
barplot(table(nc$Best.nc[1,]), xlab="# of clusters", ylab="# of criteria", main="Number of clusters chosen by 26 criteria")
par(mfrow=c(1,1))
Hexagon <- function (x, y, unitcell = 1, col = col) {
polygon(c(x, x, x + unitcell/2, x + unitcell, x + unitcell,
x + unitcell/2), c(y + unitcell * 0.125,
y + unitcell * 0.875,
y + unitcell * 1.125,
y + unitcell * 0.875,
y + unitcell * 0.125,
y - unitcell * 0.125),
col = col, border=NA)
}
cdata <- read.delim("Cluster.txt", stringsAsFactors=FALSE)
cdata.n <- scale(subset(cdata, select=-c(ID)))
cdata <- read.delim("Cluster.txt", stringsAsFactors=FALSE)
cdata.n <- scale(subset(cdata, select=-c(ID)))
set.seed(1)
# 3x3을 만들겠다 => somgrid(3,3)
sm <- som(data = cdata.n, grid = somgrid(3, 3, "rectangular"))
k = 6
somClusters <- kmeans(sm$codes, centers = k)
str(sm)
sm$codes
plot(0, 0, type = "n", axes = FALSE, xlim = c(0,sm$grid$xdim), ylim = c(0,sm$grid$ydim), xlab = "", ylab = "", asp = 1)
ColRamp <- rev(designer.colors(n=k, col=brewer.pal(k,"Set1")))
ColorCode <- rep("#FFFFFF", length(somClusters$cluster))
for (i in 1:length(somClusters$cluster))
ColorCode[i] <- ColRamp[somClusters$cluster[i]]
offset <- 0.5
library(kohonen)
library(RColorBrewer) # to use brewer.pal
library(fields) # to use designer.colors
install.package("fields")
install.packages("fields")
library(fields) # to use designer.colors
plot(0, 0, type = "n", axes = FALSE, xlim = c(0,sm$grid$xdim), ylim = c(0,sm$grid$ydim), xlab = "", ylab = "", asp = 1)
plot(sm,type="counts")
plot(sm)
plot(sm,type="quality")
k = 6
somClusters <- kmeans(sm$codes, centers = k)
plot(0, 0, type = "n", axes = FALSE, xlim = c(0,sm$grid$xdim), ylim = c(0,sm$grid$ydim), xlab = "", ylab = "", asp = 1)
ColRamp <- rev(designer.colors(n=k, col=brewer.pal(k,"Set1")))
ColorCode <- rep("#FFFFFF", length(somClusters$cluster))
for (i in 1:length(somClusters$cluster))
ColorCode[i] <- ColRamp[somClusters$cluster[i]]
offset <- 0.5
for (row in 1:sm$grid$ydim) {
for (column in 0:(sm$grid$xdim-1))
Hexagon(column + offset, row - 1, col = ColorCode[row + sm$grid$ydim * column])
offset <- ifelse(offset, 0, 0.5)
}
par(mfrow=c(1,1))
Hexagon <- function (x, y, unitcell = 1, col = col) {
polygon(c(x, x, x + unitcell/2, x + unitcell, x + unitcell,
x + unitcell/2), c(y + unitcell * 0.125,
y + unitcell * 0.875,
y + unitcell * 1.125,
y + unitcell * 0.875,
y + unitcell * 0.125,
y - unitcell * 0.125),
col = col, border=NA)
}
cdata <- read.delim("Cluster.txt", stringsAsFactors=FALSE)
cdata.n <- scale(subset(cdata, select=-c(ID)))
set.seed(1)
# 3x3을 만들겠다 => somgrid(3,3)
sm <- som(data = cdata.n, grid = somgrid(3, 3, "rectangular"))
str(sm)
sm$codes
plot(sm)
plot(sm,type="counts")
plot(sm,type="quality")
k = 6
somClusters <- kmeans(sm$codes, centers = k)
plot(0, 0, type = "n", axes = FALSE, xlim = c(0,sm$grid$xdim), ylim = c(0,sm$grid$ydim), xlab = "", ylab = "", asp = 1)
ColRamp <- rev(designer.colors(n=k, col=brewer.pal(k,"Set1")))
ColorCode <- rep("#FFFFFF", length(somClusters$cluster))
for (i in 1:length(somClusters$cluster))
ColorCode[i] <- ColRamp[somClusters$cluster[i]]
offset <- 0.5
for (row in 1:sm$grid$ydim) {
for (column in 0:(sm$grid$xdim-1))
Hexagon(column + offset, row - 1, col = ColorCode[row + sm$grid$ydim * column])
offset <- ifelse(offset, 0, 0.5)
}
sm <- som(data = cdata.n, grid = somgrid(10, 10, "rectangular"))
str(sm)
sm$codes
plot(sm)
plot(sm,type="counts")
plot(sm,type="quality")
k = 6
somClusters <- kmeans(sm$codes, centers = k)
plot(0, 0, type = "n", axes = FALSE, xlim = c(0,sm$grid$xdim), ylim = c(0,sm$grid$ydim), xlab = "", ylab = "", asp = 1)
ColRamp <- rev(designer.colors(n=k, col=brewer.pal(k,"Set1")))
ColorCode <- rep("#FFFFFF", length(somClusters$cluster))
for (i in 1:length(somClusters$cluster))
ColorCode[i] <- ColRamp[somClusters$cluster[i]]
offset <- 0.5
for (row in 1:sm$grid$ydim) {
for (column in 0:(sm$grid$xdim-1))
Hexagon(column + offset, row - 1, col = ColorCode[row + sm$grid$ydim * column])
offset <- ifelse(offset, 0, 0.5)
}
sm <- som(data = cdata.n, grid = somgrid(10, 10, "rectangular"))
str(sm)
sm$codes
plot(sm)
plot(sm,type="counts")
plot(sm,type="quality")
k = 6
somClusters <- kmeans(sm$codes, centers = k)
plot(0, 0, type = "n", axes = FALSE, xlim = c(0,sm$grid$xdim), ylim = c(0,sm$grid$ydim), xlab = "", ylab = "", asp = 1)
ColRamp <- rev(designer.colors(n=k, col=brewer.pal(k,"Set1")))
ColorCode <- rep("#FFFFFF", length(somClusters$cluster))
for (i in 1:length(somClusters$cluster))
ColorCode[i] <- ColRamp[somClusters$cluster[i]]
offset <- 0.5
for (row in 1:sm$grid$ydim) {
for (column in 0:(sm$grid$xdim-1))
Hexagon(column + offset, row - 1, col = ColorCode[row + sm$grid$ydim * column])
offset <- ifelse(offset, 0, 0.5)
}
source('D:/DataScience/KMU/Second Semester/DataMining/1203_Clustering/visSOM.R', encoding = 'UTF-8', echo=TRUE)
library(cluster)
library(NbClust)
library(kohonen)
library(ggplot2)
library(gridExtra)
library(scales)
install.packages("fields")
