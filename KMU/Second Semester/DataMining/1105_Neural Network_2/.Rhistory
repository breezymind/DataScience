install.packages("nnet") # 자기가 만든 모델을 시각화 할 수 없다.
library(nnet); library(caret); library(ROCR)
cb <- read.delim("Hshopping.txt", stringsAsFactors=FALSE)
cb$반품여부 <- factor(cb$반품여부)	# 명목형 값 예측일 경우
set.seed(1)
inTrain <- createDataPartition(y=cb$반품여부, p=0.6, list=FALSE)
cb.train <- cb[inTrain,]
cb.test <- cb[-inTrain,]
source('D:/DataScience/KMU/Second Semester/DataMining/1105_Neural Network_2/p1105.R', encoding = 'UTF-8', echo=TRUE)
install.packages("nnet")
cb <- read.delim("Hshopping.txt", stringsAsFactors=FALSE)
cb$반품여부 <- factor(cb$반품여부)	# 명목형 값 예측일 경우
set.seed(1)
inTrain <- createDataPartition(y=cb$반품여부, p=0.6, list=FALSE)
cb.train <- cb[inTrain,]
cb.test <- cb[-inTrain,]
set.seed(123)
nn_model <- nnet(반품여부 ~ 성별+나이+구매금액+출연자, data=cb.train, size=3, maxit=1000)	# size: # of hidden nodes
library(nnet); library(caret); library(ROCR)
install.packages("nnet") # 자기가 만든 모델을 시각화 할 수 없다.
library(nnet); library(caret); library(ROCR)
cb <- read.delim("Hshopping.txt", stringsAsFactors=FALSE)
cb$반품여부 <- factor(cb$반품여부)	# 명목형 값 예측일 경우
set.seed(1)
inTrain <- createDataPartition(y=cb$반품여부, p=0.6, list=FALSE)
cb.train <- cb[inTrain,]
cb.test <- cb[-inTrain,]
set.seed(123)
nn_model <- nnet(반품여부 ~ 성별+나이+구매금액+출연자, data=cb.train, size=3, maxit=1000)	# size: # of hidden nodes
library(devtools)
source_url('https://gist.githubusercontent.com/Peque/41a9e20d6687f2f3108d/raw/85e14f3a292e126f1454864427e3a189c2fe33f3/nnet_plot_update.r')
plot.nnet(nn_model)
library(NeuralNetTools)
install.packages("NeuralNetTools")
library(NeuralNetTools)
garson(nn_model)
predict(nn_model, newdata=cb.test, type="class")
install.packages("nnet")   # 시각화에 부족
