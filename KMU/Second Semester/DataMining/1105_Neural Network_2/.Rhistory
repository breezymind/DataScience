install.packages("nnet") # 자기가 만든 모델을 시각화 할 수 없다.
library(nnet); library(caret); library(ROCR)
cb <- read.delim("Hshopping.txt", stringsAsFactors=FALSE)
cb$반품여부 <- factor(cb$반품여부)	# 명목형 값 예측일 경우
set.seed(1)
inTrain <- createDataPartition(y=cb$반품여부, p=0.6, list=FALSE)
cb.train <- cb[inTrain,]
cb.test <- cb[-inTrain,]
source('D:/DataScience/KMU/Second Semester/DataMining/1105_Neural Network_2/p1105.R', encoding = 'UTF-8', echo=TRUE)
install.packages("nnet")
cb <- read.delim("Hshopping.txt", stringsAsFactors=FALSE)
cb$반품여부 <- factor(cb$반품여부)	# 명목형 값 예측일 경우
set.seed(1)
inTrain <- createDataPartition(y=cb$반품여부, p=0.6, list=FALSE)
cb.train <- cb[inTrain,]
cb.test <- cb[-inTrain,]
set.seed(123)
nn_model <- nnet(반품여부 ~ 성별+나이+구매금액+출연자, data=cb.train, size=3, maxit=1000)	# size: # of hidden nodes
library(nnet); library(caret); library(ROCR)
install.packages("nnet") # 자기가 만든 모델을 시각화 할 수 없다.
library(nnet); library(caret); library(ROCR)
cb <- read.delim("Hshopping.txt", stringsAsFactors=FALSE)
cb$반품여부 <- factor(cb$반품여부)	# 명목형 값 예측일 경우
set.seed(1)
inTrain <- createDataPartition(y=cb$반품여부, p=0.6, list=FALSE)
cb.train <- cb[inTrain,]
cb.test <- cb[-inTrain,]
set.seed(123)
nn_model <- nnet(반품여부 ~ 성별+나이+구매금액+출연자, data=cb.train, size=3, maxit=1000)	# size: # of hidden nodes
library(devtools)
source_url('https://gist.githubusercontent.com/Peque/41a9e20d6687f2f3108d/raw/85e14f3a292e126f1454864427e3a189c2fe33f3/nnet_plot_update.r')
plot.nnet(nn_model)
library(NeuralNetTools)
install.packages("NeuralNetTools")
library(NeuralNetTools)
garson(nn_model)
predict(nn_model, newdata=cb.test, type="class")
install.packages("nnet")   # 시각화에 부족
install.packages("nnet")   # 시각화에 부족
install.packages("devtools")
install.packages("NeuralNetTools")
install.packages("neuralnet")
library(nnet); library(caret); library(ROCR)
rm(list=ls())
cb <- read.delim("../1015_Decision Tree/Hshopping.txt", stringsAsFactors=FALSE)
cb <- read.delim("../1022_Decision Tree_2//Hshopping.txt", stringsAsFactors=FALSE)
cb$반품여부 <- factor(cb$반품여부)	# 명목형 값 예측일 경우
set.seed(1)
inTrain <- createDataPartition(y=cb$반품여부, p=0.6, list=FALSE)
cb.train <- cb[inTrain,]
cb.test <- cb[-inTrain,]
nn_model <- nnet(반품여부 ~ 성별+나이+구매금액+출연자, data=cb.train, size=3, maxit=1000)	# size=hidden node수
summary(nn_model)
nrow(cb.train)
nrow(cb)
?nnet
nn_model
summary(nn_model)
set.seed(123)
inTrain <- createDataPartition(y=cb$반품여부, p=0.6, list=FALSE)
cb.train <- cb[inTrain,]
cb.test <- cb[-inTrain,]
nrow(cb.train)
nrow(cb)
nn_model <- nnet(반품여부 ~ 성별+나이+구매금액+출연자, data=cb.train, size=3, maxit=1000)	# size=hidden node수
nn_model
summary(nn_model)
set.seed(1)
inTrain <- createDataPartition(y=cb$반품여부, p=0.6, list=FALSE)
cb.train <- cb[inTrain,]
cb.test <- cb[-inTrain,]
nrow(cb.train)
nrow(cb)
nn_model <- nnet(반품여부 ~ 성별+나이+구매금액+출연자, data=cb.train, size=3, maxit=1000)	# size=hidden node수
nn_model
summary(nn_model)
set.seed(123)
nn_model <- nnet(반품여부 ~ 성별+나이+구매금액+출연자, data=cb.train, size=3, maxit=1000)	# size=hidden node수
nn_model
summary(nn_model)
library(devtools)
source_url('https://gist.githubusercontent.com/Peque/41a9e20d6687f2f3108d/raw/85e14f3a292e126f1454864427e3a189c2fe33f3/nnet_plot_update.r')
plot.nnet(nn_model)
nn_model2 <- nnet(반품여부 ~ 성별+나이+구매금액+출연자, data=cb.train, size=3, maxit=1000, decay=0.0005)	# size=hidden node수
nn_model2
plot.nnet(nn_model2)
library(NeuralNetTools)
garson(nn_model)   # by 변수 중요도 순서
confusionMatrix(predict(nn_model, newdata=cb.test, type="class"), cb.test$반품여부)
confusionMatrix(predict(nn_model2, newdata=cb.test, type="class"), cb.test$반품여부)
library(neuralnet)
cb <- read.delim("Hshopping.txt", stringsAsFactors=FALSE)
set.seed(1)
inTrain <- createDataPartition(y=cb$반품여부, p=0.6, list=FALSE)
cb.train <- cb[inTrain,]
cb.test <- cb[-inTrain,]
set.seed(123)
nn2_model <- neuralnet(반품여부 ~ 성별+나이+구매금액+출연자,
data=cb.train, hidden=3, threshold=0.01)
nn2_model
nn2_model2 <- neuralnet(반품여부 ~ 성별+나이+구매금액+출연자,
data=cb.train, hidden=c(2,3), threshold=0.01)
plot(nn2_model2)
?treshold
?nuralnet
?neuralnet
formula <- as.formula(paste('Species ~',
paste(names(iris)[-length(iris)], collapse='+')))
formula
m2 <- neuralnet(formula, iris, hidden=3, linear.output=FALSE)
trainData <- cbind(iris[, 1:4], class.ind(iris$Species))
head(trainData) # field 3개 추가됨 / setosa as 1, 나머지 as 0
View(trainData)
unique(trainData$setosa)
m2 <- neuralnet(setosa + versicolor + virginica ~ Sepal.Length
+ Sepal.Width + Petal.Length + Petal.Width, trainData, hidden=3) # 이또한 이진 분리로 나누어 진다.
plot(m2)
compute(m2, iris[, 1:4])$net.result
