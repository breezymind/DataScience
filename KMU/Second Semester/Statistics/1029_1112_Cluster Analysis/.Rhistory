plot(df$value,df$value2)
qqnorm(df$value,df$value2)
qqline(df$value,df$value2)
?qqline
plot(df$value,df$value2)
plot(df$value,df$value2, type="l")
plot(df$value,df$value2)
plot(df$value,df$value2, type="l")
plot(df$value,df$value2, type="l", add=T)
plot(df$value,df$value2)
plot(df$value,df$value2, type="l", add=T)
plot(df$value,df$value2)
plot(df$value,df$value2, xlim =c(0,250), ylim=c(0,250))
df$mean <- (abs(df$value-df$value2)/2)
head(df)
mean(df$mean)
boxplot(df$mean)
colnames(jet)
jet_tmp <- jet[,-c(1,2,7)]
rownames(jet_tmp) <- jet[,1]
round(dist(jet_tmp)) # euclidean 거리 측정으로 기본 측정
round(dist(jet_tmp, method = "manhattan")) # manhanttan
head(jet_tmp)
round(dist(jet_tmp)) # euclidean 거리 측정으로 기본 측정
round(dist(jet_tmp, method = "manhattan")) # manhanttan
df <- melt(as.matrix(round(dist(jet_tmp))), varnames = c("row", "col"))
df2 <- melt(as.matrix(round(dist(jet_tmp, method = "manhattan"))), varnames = c("row", "col"))
df$value2 <- df2$value
df$mean <- (abs(df$value-df$value2)/2)
boxplot(df$mean)
plot(df$value,df$value2, xlim =c(0,250), ylim=c(0,250))
plot(df$value,df$value2)
boxplot(df$mean)
boxplot(df$value)
head(df)
par(mfrow=c(1,3))
colnames(df[,3])
colnames(df[3])
par(mfrow=c(1,3))
for(i in 3:5){
boxplot(df[,i], las=2, main=colnames(df[i]))
}
par(mfrow=c(1,3))
for(i in 3:5){
boxplot(df[,i], las=2, main=colnames(df[i]), ylim=c(0,10))
}
library(psych)
pairs.panels(jet_tmp)
pairs.panels(jet_tmp)
mahalanobis(jet_tmp, colMeans(jet_tmp), cov(jet_tmp)) # 열의 중심에서 얼마나 떨어져있냐? 공분산 행렬을 통해서
man <- as.data.frame(mahalanobis(jet_tmp, colMeans(jet_tmp), cov(jet_tmp))) # 열의 중심에서 얼마나 떨어져있냐? 공분산 행렬을 통해서
man
colnames(man) <- "distFromcenter"
man
man <- man[order(man$distFromcenter,decreasing = T)]
man <- man[order(man$distFromcenter,decreasing = T),]
head(man)
man
man <- as.data.frame(mahalanobis(jet_tmp, colMeans(jet_tmp), cov(jet_tmp))) # 열의 중심에서 얼마나 떨어져있냐? 공분산 행렬을 통해서
colnames(man) <- "distFromcenter"
man <- man[order(man$distFromcenter,decreasing = T),]
man
head(man)
man
man <- as.data.frame(mahalanobis(jet_tmp, colMeans(jet_tmp), cov(jet_tmp))) # 열의 중심에서 얼마나 떨어져있냐? 공분산 행렬을 통해서
colnames(man) <- "distFromcenter"
str(man)
hc1 <- hclust(dist(jet_tmp),method="single")
hc1
plot(hc1)
par(mfrow=c(1,4))
hc1 <- hclust(dist(jet_tmp),method="single")
plot(hc1)
hc2 <- hclust(dist(jet_tmp),method="complete")
plot(hc2)
hc3 <- hclust(dist(jet_tmp),method="average")
plot(hc3)
hc4 <- hclust(dist(jet_tmp),method="ward.D")
plot(hc4)
par(mfrow=c(1,1))
par(mfrow=c(1,4))
hc1 <- hclust(dist(jet_tmp),method="single")
plot(hc1, main="single")
hc2 <- hclust(dist(jet_tmp),method="complete")
plot(hc2, main="complete")
hc3 <- hclust(dist(jet_tmp),method="average")
plot(hc3, main="average")
hc4 <- hclust(dist(jet_tmp),method="ward.D")
plot(hc4, method="ward.D")
par(mfrow=c(1,1))
head(jet_tmp)
pairs.panels(jet_tmp)
jet_tmp_s <- scale(jet_tmp)
jet_tmp_s <- scale(jet_tmp)
round(dist(jet_tmp_s)) # euclidean 거리 측정으로 기본 측정
round(dist(jet_tmp_s, method = "manhattan")) # manhanttan
df <- melt(as.matrix(round(dist(jet_tmp_s))), varnames = c("row", "col"))
df2 <- melt(as.matrix(round(dist(jet_tmp_s, method = "manhattan"))), varnames = c("row", "col"))
df$value2 <- df2$value
df$mean <- (abs(df$value-df$value2)/2)
par(mfrow=c(1,3))
for(i in 3:5){
boxplot(df[,i], las=2, main=colnames(df[i]), ylim=c(0,10))
}
plot(df$value,df$value2)
man <- as.data.frame(mahalanobis(jet_tmp_s, colMeans(jet_tmp_s), cov(jet_tmp_s))) # 열의 중심에서 얼마나 떨어져있냐? 공분산 행렬을 통해서
colnames(man) <- "distFromcenter"
man
par(mfrow=c(1,4))
hc1 <- hclust(dist(jet_tmp_s),method="single")
plot(hc1, main="single")
hc2 <- hclust(dist(jet_tmp_s),method="complete")
hc3 <- hclust(dist(jet_tmp_s),method="average")
plot(hc2, main="complete")
hc4 <- hclust(dist(jet_tmp_s),method="ward.D")
plot(hc4, method="ward.D")
plot(hc3, main="average")
par(mfrow=c(1,1))
par(mfrow=c(1,4))
hc1 <- hclust(dist(jet_tmp_s),method="single")
plot(hc1, main="single")
hc2 <- hclust(dist(jet_tmp_s),method="complete")
plot(hc2, main="complete")
hc3 <- hclust(dist(jet_tmp_s),method="average")
plot(hc3, main="average")
hc4 <- hclust(dist(jet_tmp_s),method="ward.D")
plot(hc4, main="ward.D")
par(mfrow=c(1,1))
hc4_result <- cutree(hc4,k=4)
hc4_result
hc4_result <- cutree(hc4,k=2)
hc4_result
jet_tmp_s <- as.data.frame(scale(jet_tmp))
head(jet_tmp_s)
jet_tmp_s <- as.data.frame(scale(jet_tmp))
round(dist(jet_tmp_s)) # euclidean 거리 측정으로 기본 측정
round(dist(jet_tmp_s, method = "manhattan")) # manhanttan
df <- melt(as.matrix(round(dist(jet_tmp_s))), varnames = c("row", "col"))
df2 <- melt(as.matrix(round(dist(jet_tmp_s, method = "manhattan"))), varnames = c("row", "col"))
df$value2 <- df2$value
df$mean <- (abs(df$value-df$value2)/2)
par(mfrow=c(1,3))
for(i in 3:5){
boxplot(df[,i], las=2, main=colnames(df[i]), ylim=c(0,10))
}
plot(df$value,df$value2)
man <- as.data.frame(mahalanobis(jet_tmp_s, colMeans(jet_tmp_s), cov(jet_tmp_s))) # 열의 중심에서 얼마나 떨어져있냐? 공분산 행렬을 통해서
colnames(man) <- "distFromcenter"
par(mfrow=c(1,4))
hc1 <- hclust(dist(jet_tmp_s),method="single")
plot(hc1, main="single")
hc2 <- hclust(dist(jet_tmp_s),method="complete")
plot(hc2, main="complete")
plot(hc3, main="average")
hc4 <- hclust(dist(jet_tmp_s),method="ward.D")
hc3 <- hclust(dist(jet_tmp_s),method="average")
plot(hc4, main="ward.D")
par(mfrow=c(1,1))
hc2_result <- cutree(hc2,k=2)
hc2_result
jet_tmp_s$cluster <- hc2_result
head(jet_tmp_s)
library(ggplot2)
describeBy(jet_tmp_s,by=jet_tmp_s$cluster)
describeBy(jet_tmp_s,group=jet_tmp_s$cluster)
tab <- describeBy(jet_tmp_s,group=jet_tmp_s$cluster, mat=T)
tab
gg <- ggplot(tab,aes(x=group1,y=mean))
gg <- ggplot(tab,aes(x=group1,y=mean))
gg <- ggplot(tab,aes(x=group1,y=mean))
gg + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
gg <- ggplot(tab,aes(x=group1,y=mean))
gg + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
tab <- describeBy(jet_tmp_s[,1],group=jet_tmp_s$cluster, mat=T)
tab
head(jet_tmp_s[,1])
head(jet_tmp_s)
gg <- ggplot(tab,aes(x=group1,y=mean))
gg + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
jet_tmp_s$cluster <- hc2_result
tab <- describeBy(jet_tmp_s,group=jet_tmp_s$cluster, mat=T)
tab
gg <- ggplot(tab[c(1,2)],aes(x=group1,y=mean))
gg + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
gg <- ggplot(tab[c(1,2),],aes(x=group1,y=mean))
gg + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
gg2 <- ggplot(tab[c(3,4),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
gg3 <- ggplot(tab[c(5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
gg4 <- ggplot(tab[c(7,8),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
grid.arrange(gg1, gg2,gg3,gg4 ncol=4)
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
require(gridExtra)
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("My x label")
gg2 <- ggplot(tab[c(3,4),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
gg3 <- ggplot(tab[c(5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
gg4 <- ggplot(tab[c(7,8),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1))
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR")
gg2 <- ggplot(tab[c(3,4),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF")
gg3 <- ggplot(tab[c(5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF")
gg4 <- ggplot(tab[c(7,8),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF")
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR") + ylim(c(-2,2))
gg2 <- ggplot(tab[c(3,4),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF")
gg3 <- ggplot(tab[c(5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF")
gg4 <- ggplot(tab[c(7,8),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF")
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR") + ylim(c(-2,2))
gg2 <- ggplot(tab[c(3,4),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF") + ylim(c(-2,2))
gg3 <- ggplot(tab[c(5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF") + ylim(c(-2,2))
gg4 <- ggplot(tab[c(7,8),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF") + ylim(c(-2,2))
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
tab
pairs.panels(jet_tmp_s,col=hc2_result,pch=hc2_result)
pairs(jet_tmp_s,col=hc2_result,pch=hc2_result)
pca <- prcomp(jet_tmp_s) #이미 표준화를 하였기 때문에 scale=T를 수행 할 필요가 없다.
pca
plot(pca,type="l")
summary(pca)
jet_tmp_s
pca <- prcomp(jet_tmp_s[,-5]) #이미 표준화를 하였기 때문에 scale=T를 수행 할 필요가 없다.
plot(pca,type="l")
summary(pca) # PC2까지 78%를 설명가능하므로 2개를 사용하여도 충분할것으로 판단.
pca$rotation[,c(1,2)]
biplot(pca,cex=0.8)
barplot(pca$rotation[,1])
par(mfrow=c(1,2))
barplot(pca$rotation[,1])
barplot(pca$rotation[,2])
barplot(pca$rotation[,1], ylim=c(-1,1))
barplot(pca$rotation[,2], ylim=c(-1,1))
palette(alpha(brewer.pal(9,'Set1'), 0.5))
library(brewer.pal)
library(RColorBrewer)
library(plotly)
install.packages("plotly")
library(plotly)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(pca$x[,1:2], col=jet_tmp_s$cluster, pch=16)
DF <- data.frame(PC1 = pca$x[,1], PC2= pca$x[,2], Cluster = hc2_result)
DF <- data.frame(PC1 = pca$x[,1], PC2= pca$x[,2], Cluster = hc2_result)
ggplot(DF, aes(x=PC1,y=PC2)) + geom_point(aes(colour=Cluster,shape=Cluster))
DF <- data.frame(PC1 = pca$x[,1], PC2= pca$x[,2], Cluster = factor(hc2_result))
ggplot(DF, aes(x=PC1,y=PC2)) + geom_point(aes(colour=Cluster,shape=Cluster))
library(ggfortify)
library(cluster)
autoplot(pca,data=jet_tmp_s,colour='Cluster',label=T,shape='Cluster', loadings=T,loadings.label = T,loadings.label.size = 3)
library(cluster)
head(jet_tmp_s)
autoplot(pca,data=jet_tmp_s,colour='cluster',label=T,shape='cluster', loadings=T,loadings.label = T,loadings.label.size = 3)
jet_tmp_s$cluster <- factor(jet_tmp_s$cluster)
autoplot(pca,data=jet_tmp_s,colour='cluster',label=T,shape='cluster', loadings=T,loadings.label = T,loadings.label.size = 3)
autoplot(fanny(jet_tmp_s, 2), frame = TRUE)
autoplot(pca,data=jet_tmp_s,colour='cluster',label=T,shape='cluster', loadings=T,loadings.label = T,loadings.label.size = 3)
autoplot(fanny(jet_tmp_s, 2), frame = TRUE)
autoplot(pam(jet_tmp_s, 2), frame = TRUE, frame.type = 'norm')
head(jet_tmp_s)
autoplot(pam(jet_tmp_s[,-5], 2), frame = TRUE, frame.type = 'norm')
autoplot(fanny(jet_tmp_s, 2), frame = TRUE)
autoplot(fanny(jet_tmp_s[,-5], 2), frame = TRUE)
autoplot(pca,data=jet_tmp_s,colour='cluster',label=T,shape='cluster', loadings=T,loadings.label = T,loadings.label.size = 3)
autoplot(fanny(jet_tmp_s[,-5], 2), frame = TRUE)
autoplot(pam(jet_tmp_s[,-5], 2), frame = TRUE, frame.type = 'norm')
?autoplot
?autoplot
?pam
qqnorm(pca$x[,1])
qqline(pca$x[,1])
par(mfrow=c(1,1))
qqnorm(pca$x[,1])
qqline(pca$x[,1])
qqnorm(pca$x[,2])
qqline(pca$x[,2])
autoplot(pca)
autoplot(pca,data=jet_tmp_s,colour='cluster')
autoplot(pca,data=jet_tmp_s,colour='cluster',label=T,shape =T)
autoplot(pca,data=jet_tmp_s,colour='cluster',label=T,shape =F)
autoplot(pca,data=jet_tmp_s,colour='cluster',label=T,shape ='cluster')
result <- c()
for(i in 1:5){
km <- kmeans(jet_tmp_s[,-5],i)
result[i] <- sum(km$withinss)
}
result
head(jet_tmp_s[,-5])
plot(result,type = "l")
points(result)
jet_tmp_s <- jet_tmp_s[,-5] # cluster 제외.
result <- c()
for(i in 1:5){
km <- kmeans(jet_tmp_s,i)
result[i] <- sum(km$withinss)
}
plot(result,type = "l") # 2개아니면 4개로 표현.
points(result)
par(mfrow=c(1,4))
hc1 <- hclust(dist(jet_tmp_s),method="single")
plot(hc1, main="single")
hc2 <- hclust(dist(jet_tmp_s),method="complete")
plot(hc2, main="complete")
hc3 <- hclust(dist(jet_tmp_s),method="average")
plot(hc3, main="average")
hc4 <- hclust(dist(jet_tmp_s),method="ward.D")
plot(hc4, main="ward.D")
par(mfrow=c(1,1))
?kmeans
km <- kmeans(jet_tmp_s,2)
head(km)
km$cluster
jet_tmp_s$cluster <- km$cluster
pairs(jet_tmp_s,col=km$cluster,pch=km$cluster)
tab <- describeBy(jet_tmp_s,group=jet_tmp_s$cluster, mat=T)
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR") + ylim(c(-2,2))
gg2 <- ggplot(tab[c(3,4),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF") + ylim(c(-2,2))
gg3 <- ggplot(tab[c(5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF") + ylim(c(-2,2))
gg4 <- ggplot(tab[c(7,8),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF") + ylim(c(-2,2))
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
jet_tmp_s$cluster <- hc2_result
tab <- describeBy(jet_tmp_s,group=jet_tmp_s$cluster, mat=T)
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR") + ylim(c(-2,2))
gg2 <- ggplot(tab[c(3,4),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF") + ylim(c(-2,2))
gg3 <- ggplot(tab[c(5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF") + ylim(c(-2,2))
gg4 <- ggplot(tab[c(7,8),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF") + ylim(c(-2,2))
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
jet_tmp_s <- jet_tmp_s[,-5] # cluster 제외.
result <- c()
for(i in 1:5){
km <- kmeans(jet_tmp_s,i)
result[i] <- sum(km$withinss)
}
plot(result,type = "l") # 2개아니면 4개로 표현.
points(result)
km <- kmeans(jet_tmp_s,2)
jet_tmp_s$cluster <- km$cluster
pairs(jet_tmp_s,col=km$cluster,pch=km$cluster)
tab <- describeBy(jet_tmp_s,group=jet_tmp_s$cluster, mat=T)
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR") + ylim(c(-2,2))
gg2 <- ggplot(tab[c(3,4),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF") + ylim(c(-2,2))
gg3 <- ggplot(tab[c(5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF") + ylim(c(-2,2))
gg4 <- ggplot(tab[c(7,8),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF") + ylim(c(-2,2))
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
plot(SPR,SLF,pch=km$cluster,col=km$cluster,main="Kmean Method")
plot(jet_tmp_s$SPR,jet_tmp_s$SLF,pch=km$cluster,col=km$cluster,main="Kmean Method")
text(SPF,SLF,labels=rownames(jet_tmp_s),cex=0.8,adj=0,pos=4,col=km$cluster)
text(jet_tmp_s$SPR,jet_tmp_s$SLF,labels=rownames(jet_tmp_s),cex=0.8,adj=0,pos=4,col=km$cluster)
points(km$centers[,c(1,2)],col=1:2,pch=4,cex=2)
jet_tmp_s <- as.data.frame(scale(jet_tmp))
hc2_result <- cutree(hc2,k=2)
jet_tmp_s$cluster <- hc2_result
plot(jet_tmp_s$SPR,jet_tmp_s$SLF,pch=jet_tmp_s$cluster,col=jet_tmp_s$cluster,main="Kmean Method")
text(jet_tmp_s$SPR,jet_tmp_s$SLF,labels=rownames(jet_tmp_s),cex=0.8,adj=0,pos=4,col=jet_tmp_s$cluster)
jet_tmp_s <- jet_tmp_s[,-5] # cluster 제외.
km <- kmeans(jet_tmp_s,2)
jet_tmp_s$cluster <- km$cluster
pairs(jet_tmp_s,col=km$cluster,pch=km$cluster)
table(km$cluster)
km <- kmeans(jet_tmp_s,2)
jet_tmp_s$cluster <- km$cluster
table(km$cluster)
jet_tmp_s <- as.data.frame(scale(jet_tmp))
hc2_result <- cutree(hc2,k=2)
hc2_result
jet_tmp_s$cluster <- hc2_result
pca <- prcomp(jet_tmp_s[jet_tmp_s$cluster==1,-5]) #이미 표준화를 하였기 때문에 scale=T를 수행 할 필요가 없다.
pca2 <- prcomp(jet_tmp_s[jet_tmp_s$cluster==2,-5]) #이미 표준화를 하였기 때문에 scale=T를 수행 할 필요가 없다.
plot(pca,type="l")
plot(pca2,type="l")
summary(pca) # PC2까지 78%를 설명가능하므로 2개를 사용하여도 충분할것으로 판단.
summary(pca2) # PC2까지 89%를 설명가능하므로 2개를 사용하여도 충분할것으로 판단.
table(hc2_result)
qqnorm(pca$x[,1]) # 둘다 정규화
qqline(pca$x[,1])
qqnorm(pca$x[,2])
qqline(pca$x[,2])
par(mfrow=c(1,2))
qqnorm(pca$x[,1]) # 둘다 정규화
qqline(pca$x[,1])
qqnorm(pca$x[,2])
qqline(pca$x[,2])
qqnorm(pca2$x[,1]) # 둘다 정규화
qqline(pca2$x[,1])
qqnorm(pca2$x[,2])
qqline(pca2$x[,2])
par(mfrow=c(1,1))
par(mfrow=c(1,2))
barplot(pca$rotation[,1], ylim=c(-1,1))
barplot(pca$rotation[,2], ylim=c(-1,1))
barplot(pca2$rotation[,1], ylim=c(-1,1))
barplot(pca2$rotation[,2], ylim=c(-1,1))
pca$rotation[,c(1,2)] # PC1은 PLF를 제외한 나머지에 양의 영향을 받는다. PC2는 PLF에 가장 큰 영향도를 받는다.
biplot(pca,cex=0.8)
par(mfrow=c(1,1))
pca
pca
biplot(pca,cex=0.8)
biplot(pca2,cex=0.8)
biplot(pca,cex=0.8)
pca <- prcomp(jet_tmp_s[,-5]) #이미 표준화를 하였기 때문에 scale=T를 수행 할 필요가 없다.
plot(pca,type="l")
table(hc2_result) # 1 : 12, 2:10
summary(pca) # PC2까지 89%를 설명가능하므로 2개를 사용하여도 충분할것으로 판단.
par(mfrow=c(1,2))
qqnorm(pca$x[,1]) # 둘다 정규화
qqline(pca$x[,1])
qqnorm(pca$x[,2])
qqline(pca$x[,2])
par(mfrow=c(1,1))
par(mfrow=c(1,2))
barplot(pca$rotation[,1], ylim=c(-1,1))
barplot(pca$rotation[,2], ylim=c(-1,1))
biplot(pca,cex=0.8)
par(mfrow=c(1,1))
biplot(pca,cex=0.8)
plot(jet_tmp_s$SPR,jet_tmp_s$SLF,pch=km$cluster,col=km$cluster,main="Kmean Method")
text(jet_tmp_s$SPR,jet_tmp_s$SLF,labels=rownames(jet_tmp_s),cex=0.8,adj=0,pos=4,col=km$cluster)
points(km$centers[,c(1,2)],col=1:2,pch=4,cex=2)
jet_tmp_s$cluster <- km$cluster
pairs(jet_tmp_s,col=km$cluster,pch=km$cluster)
tab <- describeBy(jet_tmp_s,group=jet_tmp_s$cluster, mat=T)
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR") + ylim(c(-2,2))
gg2 <- ggplot(tab[c(3,4),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF") + ylim(c(-2,2))
gg3 <- ggplot(tab[c(5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF") + ylim(c(-2,2))
gg4 <- ggplot(tab[c(7,8),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF") + ylim(c(-2,2))
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
plot(jet_tmp_s$RGF,jet_tmp_s$SLF,pch=km$cluster,col=km$cluster,main="Kmean Method")
text(jet_tmp_s$RGF,jet_tmp_s$SLF,labels=rownames(jet_tmp_s),cex=0.8,adj=0,pos=4,col=km$cluster)
points(km$centers[,c(1,2)],col=1:2,pch=4,cex=2)
pca
DF <- data.frame(PC1 = pca$x[,1], PC2= pca$x[,2], Cluster = factor(km$cluster))
ggplot(DF, aes(x=PC1,y=PC2)) + geom_point(aes(colour=Cluster,shape=Cluster))
jet_tmp_s$cluster <- factor(jet_tmp_s$cluster)
str(jet_tmp_s)
autoplot(pca,data=jet_tmp_s,colour='cluster',label=T,shape='cluster', loadings=T,loadings.label = T,loadings.label.size = 3)
autoplot(fanny(jet_tmp_s[,-5], 2), frame = TRUE)
autoplot(pam(jet_tmp_s[,-5], 2), frame = TRUE, frame.type = 'norm')
autoplot(pca,data=jet_tmp_s,colour='cluster',label=T,shape='cluster', loadings=T,loadings.label = T,loadings.label.size = 3)
library(mclust)
mc = Mclust(jet_tmp)
head(jet_tmp)
mc
plot(mc)
summary(mc)
plot(mc)
mc <- Mclust(jet_tmp,3)
plot(mc)
mc$classification
head(jet_tmp)
par(mfrow=c(2,2))
for(i in 1:4){
boxplot(jet_tmp[,i]~mc$classification, main=names(jet_tmp)[i])
}
par(mfrow=c(3,1))
par(mfrow=c(3,1))
for(i in 1:3){
boxplot(jet_tmp[mc$classification==i,],ylim=c(0,8))
}
par(mfrow=c(1,3))
for(i in 1:3){
boxplot(jet_tmp[mc$classification==i,],ylim=c(0,5))
}
par(mfrow=c(1,3))
for(i in 1:3){
boxplot(jet_tmp[mc$classification==i,],ylim=c(0,8))
}
par(mfrow=c(2,2))
for(i in 1:4){
boxplot(jet_tmp[,i]~mc$classification, main=names(jet_tmp)[i])
}
par(mfrow=c(1,3))
for(i in 1:3){
boxplot(jet_tmp[mc$classification==i,],ylim=c(0,10))
}
par(mfrow=c(1,3))
for(i in 1:3){
boxplot(jet_tmp[mc$classification==i,],ylim=c(0,10),xlab=paste(i,"Cluster"))
}
tab <- describeBy(jet_tmp,group=mc$cluster, mat=T)
tab <- describeBy(jet_tmp,group=mc$classification, mat=T)
tab
gg1 <- ggplot(tab[c(1,2),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR") + ylim(c(-2,2))
gg2 <- ggplot(tab[c(3,4),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF") + ylim(c(-2,2))
gg3 <- ggplot(tab[c(5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF") + ylim(c(-2,2))
gg4 <- ggplot(tab[c(7,8),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF") + ylim(c(-2,2))
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
tab
gg1 <- ggplot(tab[c(1,2,3),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR") + ylim(c(-2,2))
gg2 <- ggplot(tab[c(4,5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF") + ylim(c(-2,2))
gg3 <- ggplot(tab[c(7,8,9),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF") + ylim(c(-2,2))
gg4 <- ggplot(tab[c(10,11,12),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF") + ylim(c(-2,2))
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
tab[c(1,2,3),]
gg1 <- ggplot(tab[c(1,2,3),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR")
gg2 <- ggplot(tab[c(4,5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF")
gg3 <- ggplot(tab[c(7,8,9),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF")
gg4 <- ggplot(tab[c(10,11,12),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF")
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
gg1 <- ggplot(tab[c(1,2,3),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR") + ylim(c(-1,7))
gg2 <- ggplot(tab[c(4,5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF")
gg3 <- ggplot(tab[c(7,8,9),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF")
gg4 <- ggplot(tab[c(10,11,12),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF")
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
gg1 <- ggplot(tab[c(1,2,3),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SPR") + ylim(c(-1,7))
gg2 <- ggplot(tab[c(4,5,6),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("RGF") + ylim(c(-1,7))
gg3 <- ggplot(tab[c(7,8,9),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("PLF") + ylim(c(-1,7))
gg4 <- ggplot(tab[c(10,11,12),],aes(x=group1,y=mean)) + geom_bar(position = position_dodge(), stat="identity") + geom_errorbar(aes(ymin=mean-2*se, ymax=mean+2*se, width=0.1)) + xlab("SLF") + ylim(c(-1,7))
grid.arrange(gg1, gg2,gg3,gg4,ncol=4)
biplot(kmean_pca)
kmean_pca <- prcomp(jet_tmp_s[,-5],2)
biplot(kmean_pca)
